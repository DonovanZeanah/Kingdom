<<<<<<< HEAD
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
=======
ï»¿## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files

*.rsuser

*.suo
*.user
*.userosscache
*.sln.docstates
<<<<<<< HEAD
*clientapp/.angular/cache/
*clientapp/.angular/cache/*
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs
ClientApp/**/*.angular*
/Kingdom/repo_backup.git/**/*.angular*
Kingdom/old.scraps/**/*.angular*
appsettings.production.json*
appsettings.production.json
appsettings.Development.json*
appsettings.Development.json


=======
*.txt
*.PublishSettings
*.secret
secret**
deployment-microsoft/
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*
>>>>>>> master

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
<<<<<<< HEAD
build/
bld/
bin/
Bin/
obj/
Obj/

# Visual Studio 2015 cache/options directory
.vs/
=======
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/
>>>>>>> master

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

<<<<<<< HEAD
# NUNIT
*.VisualState.xml
TestResult.xml
=======
# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml
>>>>>>> master

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

<<<<<<< HEAD
*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
=======
# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
>>>>>>> master
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
<<<<<<< HEAD
*.log
=======
*_wpftmp.csproj
*.log
*.tlog
>>>>>>> master
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
<<<<<<< HEAD
=======
*.VC.db
*.VC.VC.opendb
>>>>>>> master

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

<<<<<<< HEAD
=======
# Visual Studio Trace Files
*.e2e

>>>>>>> master
# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

<<<<<<< HEAD
# JustCode is a .NET coding add-in
.JustCode

=======
>>>>>>> master
# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

<<<<<<< HEAD
=======
# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

>>>>>>> master
# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
<<<<<<< HEAD
# TODO: Comment the next line if you want to checkin your web deploy settings
=======
# Note: Comment the next line if you want to checkin your web deploy settings,
>>>>>>> master
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

<<<<<<< HEAD
# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
=======
# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets
>>>>>>> master

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

<<<<<<< HEAD
# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Windows Store app package directory
AppPackages/
BundleArtifacts/
=======
# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload
>>>>>>> master

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
<<<<<<< HEAD
!*.[Cc]ache/
=======
!?*.[Cc]ache/
>>>>>>> master

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
<<<<<<< HEAD
=======
*.jfm
>>>>>>> master
*.pfx
*.publishsettings
orleans.codegen.cs

<<<<<<< HEAD
/node_modules
=======
# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/
>>>>>>> master

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
<<<<<<< HEAD
=======
ServiceFabricBackup/
*.rptproj.bak
>>>>>>> master

# SQL Server files
*.mdf
*.ldf
<<<<<<< HEAD
=======
*.ndf
>>>>>>> master

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
<<<<<<< HEAD
=======
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl
>>>>>>> master

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
<<<<<<< HEAD
=======
node_modules/
>>>>>>> master

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

<<<<<<< HEAD
=======
# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

>>>>>>> master
# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
<<<<<<< HEAD

# FAKE - F# Make
.fake/
/KingdomMvcAngularApp/ClientApp/.angular/cache/14.0.3/angular-webpack/69b1708043dbc09ba21848cbd605d63488f5c06a
/KingdomMvcAngularApp/ClientApp/.angular/cache/14.0.3/babel-webpack
/old.scraps/Kingdom/KingdomMvcAngularApp/ClientApp/.angular/cache/14.0.3/angular-webpack/e8d2d49c3062074cd9b9bbfa7d4e1e7832990db9
/old.scraps/Kingdom
=======
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml
>>>>>>> master
