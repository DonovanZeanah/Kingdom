name: Build and deploy ASP.Net Core app to Azure Web App - mykd(Dev)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies and build Angular app
        working-directory: 'KingdomWebApp/ClientApp'
        run: |
          npm ci
          npx ng build --configuration production

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Copy Angular build output to wwwroot
        run: |
          mkdir ${{env.DOTNET_ROOT}}/KingdomWebApp/wwwroot

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/KingdomWebApp

      - name: Upload artifact for deployment job
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: MyKdApp
          path: ${{env.DOTNET_ROOT}}/KingdomWebApp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Dev'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: MyKdApp

      - name: Deploy to Azure
        run: |
          echo "Deploying to Azure..."
          Compress-Archive -Path * -DestinationPath archive.zip -Force
          $webAppName = "${env:AZURE_WEBAPP_NAME}"
          $publishUsername = "${env:AZURE_WEBAPP_PUBLISH_USERNAME}"
          $publishPassword = "${env:AZURE_WEBAPP_PUBLISH_PASSWORD}"
          Invoke-WebRequest -Uri "https://$webAppName.scm.azurewebsites.net/api/zipdeploy" -Method POST -InFile "archive.zip" -ContentType "multipart/form-data" -Credential (New-Object System.Management.Automation.PSCredential($publishUsername, (ConvertTo-SecureString $publishPassword -AsPlainText -Force)))
        shell: pwsh
        env:
          AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
          AZURE_WEBAPP_PUBLISH_USERNAME: ${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}
          AZURE_WEBAPP_PUBLISH_PASSWORD: ${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}
